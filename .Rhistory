data$Trip.Duration.Revised = as.double(data$Trip.Duration.Revised)
data$duration_time = as.double(data$duration_time)
data$Start.Day = date(data$start_date)
data$Start.Weekday = wday(data$start_date, week_start = 1)
data$Week = as.character(week(data$start_date))
data$WeekDate = as.character(strptime(floor_date(data$start_date, 'weeks', week_start = 1), format='%Y-%m-%d'))
# Remove 2014-09-01 since it is an outlier
data = data[data$WeekDate != '2014-09-01',]
setwd("~/Documents/Uber")
write.csv(data, "appdata.csv", row.names=FALSE)
######## R SHINY APP ########
data <- read.csv("/Users/ellietan/Documents/Uber/appdata.csv", stringsAsFactors = FALSE)
View(data)
str(data)
header <- dashboardHeader(title = 'San Francisco Bike Sharing Dashboard')
#Sidebar content of the dashboard
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem('Dashboard', tabName = 'dashboard', icon = icon('dashboard')),
menuItem('Visit-us', icon = icon('send',lib='glyphicon'),
href = 'https://www.salesforce.com'),
selectInput('filter', 'Select a week',
choices = unique(data$WeekDate),
selectize=TRUE,
width = '98%')
)
)
frow1 <- fluidRow(
valueBoxOutput('value1')
,valueBoxOutput('value2')
,valueBoxOutput('value3')
)
frow2 <- fluidRow(
box(
title = 'Total trips by day'
,status = 'primary'
,width=12
,solidHeader = TRUE
,collapsible = TRUE
,plotOutput('totaltripsbyWd', height = '300px')
)
)
frow3 <- fluidRow(
box(
title = 'Avg Trips per Bike per Day'
,status = 'primary'
,solidHeader = TRUE
,collapsible = TRUE
,plotOutput('tripsbyWd', height = '300px')
)
,box(
title = 'Utilization Rate (Weekday)'
,status = 'primary'
,solidHeader = TRUE
,collapsible = TRUE
,plotOutput('urbyWd', height = '300px')
)
)
frow4 <- fluidRow(
box(
title = 'Utilization Rate (Hour)'
,status = 'primary'
,width = 12
,solidHeader = TRUE
,collapsible = TRUE
,plotOutput('urbyHour', height = '300px')
)
)
# combine the two fluid rows to make the body
body <- dashboardBody(frow1, frow2, frow3, frow4)
#completing the ui part with dashboardPage
ui <- dashboardPage(title = 'This is my Page title', header, sidebar, body, skin='red')
# create the server functions for the dashboard
server <- function(input, output) {
# creating the valueBoxOutput content
output$value1 <- renderValueBox({
num_trips <- n_distinct(data[data$WeekDate == input$filter, 'Trip.ID'])
valueBox(
formatC(num_trips, format='d', big.mark=',')
# formatC(value1, format='f')
,'Total Trips'
,icon = icon('stats',lib='glyphicon')
,color = 'purple')
})
output$value2 <- renderValueBox({
data <- data[data$WeekDate == input$filter,] %>% group_by(Start.Day, Bike.Number) %>% summarize(num_of_trips=n_distinct(Trip.ID))
trips_per_day <-  mean(data$num_of_trips)
valueBox(
formatC(trips_per_day, format='f', digits=1)
,'Avg Trips Per Bike Per Day'
,icon = icon('gbp',lib='glyphicon')
,color = 'green')
})
output$value3 <- renderValueBox({
data <- n_distinct(data[data$WeekDate == input$filter, 'Bike.Number']) / n_distinct(data$Bike.Number)
valueBox(
paste0(formatC(data * 100, format='f', digits=1), '%')
,'Utilization Rate'
,icon = icon('menu-hamburger',lib='glyphicon')
,color = 'yellow')
})
#
#creating the plotOutput content
output$urbyWd <- renderPlot({
ur_weekday <- data[data$WeekDate == input$filter,] %>%
group_by(Week, Start.Weekday) %>%
summarize(total.duration=sum(duration_time),
avg.duration=mean(duration_time),
n.bikes=n_distinct(Bike.Number),
num_of_weeks=n_distinct(Start.Day),
num_of_trips=n_distinct(Trip.ID))
ur_weekday$utilization_rate = ur_weekday$n.bikes / unique_bikes
ggplot(data=ur_weekday, aes(x=Start.Weekday, y=utilization_rate)) +
geom_bar(position = 'dodge', stat = 'identity') +
ylab('Utilization Rate (%)') +
xlab('Weekday') +
geom_text(aes(label = percent(utilization_rate)),
vjust = -0.5,
position=position_dodge(0.9)) +
scale_x_continuous(breaks=1:7,
labels=c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'))
})
output$tripsbyWd <- renderPlot({
rides_per_bike <- data[data$WeekDate == input$filter,] %>%
group_by(Start.Weekday, Bike.Number) %>%
summarize(num_of_trips=n_distinct(Trip.ID))
rides_per_bike_2 <- rides_per_bike %>%
group_by(Start.Weekday) %>%
summarize(avg_trips=mean(num_of_trips))
ggplot(data=rides_per_bike_2, aes(x=Start.Weekday, y=avg_trips)) +
geom_bar(stat='identity',
position=position_dodge(),
width = 0.8) +
ylab('Avg Trips') +
xlab('Weekday') +
scale_x_continuous(breaks=1:7,
labels=c('Mon','Tue','Wed','Thu','Fri','Sat','Sun')) +
geom_text(aes(label = sprintf(avg_trips, fmt='%.1f')),
vjust = -0.5,
position=position_dodge(0.9))
})
output$totaltripsbyWd <- renderPlot({
total_trips_by_day <- data[data$WeekDate == input$filter,] %>%
group_by(Start.Weekday) %>%
summarize(num_of_trips=n_distinct(Trip.ID))
ggplot(data=total_trips_by_day, aes(x=Start.Weekday, y=num_of_trips)) +
geom_bar(stat='identity',
position=position_dodge(),
width = 0.8) +
ylab('Total Trips') +
xlab('Weekday') +
scale_x_continuous(breaks=1:7,
labels=c('Mon','Tue','Wed','Thu','Fri','Sat','Sun')) +
geom_text(aes(label = formatC(num_of_trips, format='d', big.mark=',')),
vjust = -0.5,
position=position_dodge(0.9))
})
output$urbyHour <- renderPlot({
ur_hour <- data[data$WeekDate == input$filter,] %>%
group_by(Start.Hour) %>%
summarize(n.bikes=n_distinct(Bike.Number))
ur_hour$utilization_rate = ur_hour$n.bikes / unique_bikes
ggplot(data=ur_hour, aes(x=Start.Hour, y=utilization_rate)) +
geom_bar(stat='identity',
position=position_dodge(),
width = 0.8) +
ylab('Utilization Rate (%)') +
xlab('Hour') +
scale_x_continuous(breaks=0:24,
labels=c('0','1','2','3','4','5','6','7','8','9','10','11','12',
'13','14','15','16','17','18','19','20','21','22','23','24')) +
geom_text(aes(label = percent(utilization_rate)),
vjust = -0.5,
position=position_dodge(0.9))
})
}
shinyApp(ui, server)
install.packages('rsconnect')
rsconnect::setAccountInfo(name='geekbites',
token='C599C9FA9804EDAC61C576BF38DEBBD2',
secret='<SECRET>')
library(rsconnect)
rsconnect::setAccountInfo(name='geekbites',
token='C599C9FA9804EDAC61C576BF38DEBBD2',
secret='<SECRET>')
rsconnect::setAccountInfo(name='geekbites',
token='C599C9FA9804EDAC61C576BF38DEBBD2',
secret='<SECRET>')
GET https://api.shinyapps.io/v1/users/current/
bad signature
GET https://api.shinyapps.io/v1/users/current/
bad signature
rsconnect::setAccountInfo(name='geekbites', token='C599C9FA9804EDAC61C576BF38DEBBD2', secret='6nDd3CvIggVQmwHj8biYUm3p+cNu4Tyzt5lgur+B')
rsconnect:deployApp("/Users/ellietan/Documents/Uber/RShiny.R")
rsconnect::deployApp("/Users/ellietan/Documents/Uber/RShiny.R")
library(shiny)
runApp()
pwd
setwd("~/Documents/Uber")
shiny::runApp()
cd /Users/ellietan/Documents/Uber/uber_technical_test
setwd("~/Documents/Uber/uber_technical_test")
shiny::runApp()
shiny::runApp()
shiny::runApp()
######## R SHINY APP ########
data <- read.csv("./appdata.csv", stringsAsFactors = FALSE)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
######## R SHINY APP ########
data <- read.csv("/Users/ellietan/Documents/Uber/appdata.csv", stringsAsFactors = FALSE)
shiny::runApp()
######## R SHINY APP ########
data <- read.csv("./appdata.csv", stringsAsFactors = FALSE)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
######## R SHINY APP ########
data <- read.csv("./appdata.csv", stringsAsFactors = FALSE)
#Dashboard header carrying the title of the dashboard
header <- dashboardHeader(title = 'San Francisco Bike Sharing Dashboard')
#Sidebar content of the dashboard
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem('Dashboard', tabName = 'dashboard', icon = icon('dashboard')),
menuItem('Visit-us', icon = icon('send',lib='glyphicon'),
href = 'https://www.salesforce.com'),
selectInput('filter', 'Select a week',
choices = unique(data$WeekDate),
selectize=TRUE,
width = '98%')
)
)
frow1 <- fluidRow(
valueBoxOutput('value1')
,valueBoxOutput('value2')
,valueBoxOutput('value3')
)
frow2 <- fluidRow(
box(
title = 'Total trips by day'
,status = 'primary'
,width=12
,solidHeader = TRUE
,collapsible = TRUE
,plotOutput('totaltripsbyWd', height = '300px')
)
)
frow3 <- fluidRow(
box(
title = 'Avg Trips per Bike per Day'
,status = 'primary'
,solidHeader = TRUE
,collapsible = TRUE
,plotOutput('tripsbyWd', height = '300px')
)
,box(
title = 'Utilization Rate (Weekday)'
,status = 'primary'
,solidHeader = TRUE
,collapsible = TRUE
,plotOutput('urbyWd', height = '300px')
)
)
frow4 <- fluidRow(
box(
title = 'Utilization Rate (Hour)'
,status = 'primary'
,width = 12
,solidHeader = TRUE
,collapsible = TRUE
,plotOutput('urbyHour', height = '300px')
)
)
# combine the two fluid rows to make the body
body <- dashboardBody(frow1, frow2, frow3, frow4)
#completing the ui part with dashboardPage
ui <- dashboardPage(title = 'This is my Page title', header, sidebar, body, skin='red')
# create the server functions for the dashboard
server <- function(input, output) {
# creating the valueBoxOutput content
output$value1 <- renderValueBox({
num_trips <- n_distinct(data[data$WeekDate == input$filter, 'Trip.ID'])
valueBox(
formatC(num_trips, format='d', big.mark=',')
# formatC(value1, format='f')
,'Total Trips'
,icon = icon('stats',lib='glyphicon')
,color = 'purple')
})
output$value2 <- renderValueBox({
data <- data[data$WeekDate == input$filter,] %>% group_by(Start.Day, Bike.Number) %>% summarize(num_of_trips=n_distinct(Trip.ID))
trips_per_day <-  mean(data$num_of_trips)
valueBox(
formatC(trips_per_day, format='f', digits=1)
,'Avg Trips Per Bike Per Day'
,icon = icon('gbp',lib='glyphicon')
,color = 'green')
})
output$value3 <- renderValueBox({
data <- n_distinct(data[data$WeekDate == input$filter, 'Bike.Number']) / n_distinct(data$Bike.Number)
valueBox(
paste0(formatC(data * 100, format='f', digits=1), '%')
,'Utilization Rate'
,icon = icon('menu-hamburger',lib='glyphicon')
,color = 'yellow')
})
#
#creating the plotOutput content
output$urbyWd <- renderPlot({
ur_weekday <- data[data$WeekDate == input$filter,] %>%
group_by(Week, Start.Weekday) %>%
summarize(n.bikes=n_distinct(Bike.Number))
ur_weekday$utilization_rate = ur_weekday$n.bikes / unique_bikes
ggplot(data=ur_weekday, aes(x=Start.Weekday, y=utilization_rate)) +
geom_bar(position = 'dodge', stat = 'identity') +
ylab('Utilization Rate (%)') +
xlab('Weekday') +
geom_text(aes(label = percent(utilization_rate)),
vjust = -0.5,
position=position_dodge(0.9)) +
scale_x_continuous(breaks=1:7,
labels=c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'))
})
output$tripsbyWd <- renderPlot({
rides_per_bike <- data[data$WeekDate == input$filter,] %>%
group_by(Start.Weekday, Bike.Number) %>%
summarize(num_of_trips=n_distinct(Trip.ID))
rides_per_bike_2 <- rides_per_bike %>%
group_by(Start.Weekday) %>%
summarize(avg_trips=mean(num_of_trips))
ggplot(data=rides_per_bike_2, aes(x=Start.Weekday, y=avg_trips)) +
geom_bar(stat='identity',
position=position_dodge(),
width = 0.8) +
ylab('Avg Trips') +
xlab('Weekday') +
scale_x_continuous(breaks=1:7,
labels=c('Mon','Tue','Wed','Thu','Fri','Sat','Sun')) +
geom_text(aes(label = sprintf(avg_trips, fmt='%.1f')),
vjust = -0.5,
position=position_dodge(0.9))
})
output$totaltripsbyWd <- renderPlot({
total_trips_by_day <- data[data$WeekDate == input$filter,] %>%
group_by(Start.Weekday) %>%
summarize(num_of_trips=n_distinct(Trip.ID))
ggplot(data=total_trips_by_day, aes(x=Start.Weekday, y=num_of_trips)) +
geom_bar(stat='identity',
position=position_dodge(),
width = 0.8) +
ylab('Total Trips') +
xlab('Weekday') +
scale_x_continuous(breaks=1:7,
labels=c('Mon','Tue','Wed','Thu','Fri','Sat','Sun')) +
geom_text(aes(label = formatC(num_of_trips, format='d', big.mark=',')),
vjust = -0.5,
position=position_dodge(0.9))
})
output$urbyHour <- renderPlot({
ur_hour <- data[data$WeekDate == input$filter,] %>%
group_by(Start.Hour) %>%
summarize(n.bikes=n_distinct(Bike.Number))
ur_hour$utilization_rate = ur_hour$n.bikes / unique_bikes
ggplot(data=ur_hour, aes(x=Start.Hour, y=utilization_rate)) +
geom_bar(stat='identity',
position=position_dodge(),
width = 0.8) +
ylab('Utilization Rate (%)') +
xlab('Hour') +
scale_x_continuous(breaks=0:24,
labels=c('0','1','2','3','4','5','6','7','8','9','10','11','12',
'13','14','15','16','17','18','19','20','21','22','23','24')) +
geom_text(aes(label = percent(utilization_rate)),
vjust = -0.5,
position=position_dodge(0.9))
})
}
shinyApp(ui, server)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
######## R SHINY APP ########
data <- read.csv("./appdata.csv", stringsAsFactors = FALSE)
######## R SHINY APP ########
data <- read.csv("./appdata.csv", stringsAsFactors = FALSE)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
data = read.csv('/Users/ellietan/Documents/Uber/Data/finaldata.csv', stringsAsFactors = FALSE, encoding = 'UTF-8')
# Data Processing
data$Start.Date.Revised = strptime(data$Start.Date.Revised, format='%Y-%m-%d %H:%M:%S')
data$End.Date.Revised = strptime(data$End.Date.Revised, format='%Y-%m-%d %H:%M:%S')
data$Start.Day = strptime(data$Start.Day, format='%Y-%m-%d')
data$Start.Weekday = as.integer(data$Start.Weekday)
data$Start.Month = as.integer(data$Start.Month)
data$start_date = strptime(data$start_date, format='%Y-%m-%d %H:%M:%S')
data$end_date = strptime(data$end_date, format='%Y-%m-%d %H:%M:%S')
data$Start.Hour = hour(data$start_date)
data$End.Hour = hour(data$end_date)
data$Trip.Duration.Revised = as.double(data$Trip.Duration.Revised)
data$duration_time = as.double(data$duration_time)
data$Start.Day = date(data$start_date)
data$Start.Weekday = wday(data$start_date, week_start = 1)
data$Week = as.character(week(data$start_date))
data$WeekDate = as.character(strptime(floor_date(data$start_date, 'weeks', week_start = 1), format='%Y-%m-%d'))
# Remove 2014-09-01 since it is an outlier
data = data[data$WeekDate != '2014-09-01',]
# Utilization Rate - By Weekday
ur_weekday <- data[(data$Week >= 33 & data$Week <= 34),] %>%
group_by(Week, Start.Weekday) %>%
summarize(total.duration=sum(duration_time),
avg.duration=mean(duration_time),
n.bikes=n_distinct(Bike.Number),
num_of_weeks=n_distinct(Start.Day),
num_of_trips=n_distinct(Trip.ID))
ur_weekday$utilization_rate = ur_weekday$n.bikes / unique_bikes
ggplot(data=ur_weekday, aes(x=Start.Weekday, y=utilization_rate, fill=Week)) +
geom_bar(stat='identity',
position=position_dodge(),
width = 0.8) +
geom_text(aes(label = percent(utilization_rate)),
vjust = -0.5,
position=position_dodge(0.9)) +
scale_x_continuous(breaks=1:7,
labels=c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'))
# Utilization Rate - By Weekday
ur_weekday <- data[(data$Week >= 33 & data$Week <= 34),] %>%
group_by(Week, Start.Weekday) %>%
summarize(total.duration=sum(duration_time),
avg.duration=mean(duration_time),
n.bikes=n_distinct(Bike.Number),
num_of_weeks=n_distinct(Start.Day),
num_of_trips=n_distinct(Trip.ID))
ur_weekday$utilization_rate = ur_weekday$n.bikes / unique_bikes
unique_bikes = n_distinct(data$Bike.Number)
ur_weekday$utilization_rate = ur_weekday$n.bikes / unique_bikes
ggplot(data=ur_weekday, aes(x=Start.Weekday, y=utilization_rate, fill=Week)) +
geom_bar(stat='identity',
position=position_dodge(),
width = 0.8) +
geom_text(aes(label = percent(utilization_rate)),
vjust = -0.5,
position=position_dodge(0.9)) +
scale_x_continuous(breaks=1:7,
labels=c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'))
# Utilization Rate - By Hour
ur_hour <- data[data$Week == 34,] %>%
group_by(Subscriber.Type, Start.Hour) %>%
summarize(total.duration=sum(duration_time),
avg.duration=mean(duration_time),
n.bikes=n_distinct(Bike.Number),
num_of_weeks=n_distinct(Start.Day),
num_of_trips=n_distinct(Trip.ID))
ur_hour$utilization_rate = ur_hour$n.bikes / unique_bikes
ggplot(data=ur_hour, aes(x=Start.Hour, y=utilization_rate, fill=Subscriber.Type)) +
geom_bar(stat='identity',
position=position_dodge(),
width = 0.8) +
scale_x_continuous(breaks=0:24,
labels=c('0','1','2','3','4','5','6','7','8','9','10','11','12',
'13','14','15','16','17','18','19','20','21','22','23','24'))
# Utilization Rate - By Hour
ur_hour <- data[data$Week == 34,] %>%
group_by(Start.Hour) %>%
summarize(total.duration=sum(duration_time),
avg.duration=mean(duration_time),
n.bikes=n_distinct(Bike.Number),
num_of_weeks=n_distinct(Start.Day),
num_of_trips=n_distinct(Trip.ID))
ur_hour$utilization_rate = ur_hour$n.bikes / unique_bikes
ggplot(data=ur_hour, aes(x=Start.Hour, y=utilization_rate)) +
geom_bar(stat='identity',
position=position_dodge(),
width = 0.8) +
scale_x_continuous(breaks=0:24,
labels=c('0','1','2','3','4','5','6','7','8','9','10','11','12',
'13','14','15','16','17','18','19','20','21','22','23','24'))
# Utilization Rate - Rides Per Bike Per Day
rides_per_bike <- data[data$Week == 34,] %>%
group_by(Start.Weekday, Bike.Number) %>%
summarize(num_of_trips=n_distinct(Trip.ID))
rides_per_bike_2 <- rides_per_bike %>%
group_by(Start.Weekday) %>%
summarize(avg_trips=mean(num_of_trips))
ggplot(data=rides_per_bike_2, aes(x=Start.Weekday, y=avg_trips)) +
geom_bar(stat='identity',
position=position_dodge(),
width = 0.8) +
scale_x_continuous(breaks=1:7,
labels=c('Mon','Tue','Wed','Thu','Fri','Sat','Sun')) +
geom_text(aes(label = sprintf(avg_trips, fmt='%.1f')),
vjust = -0.5,
position=position_dodge(0.9))
